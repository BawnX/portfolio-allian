name: Vercel Deployment Preview

env:
    VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
    VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROYECT_ID}}
    FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true

permissions:
  issues: write
  contents: read

on:
  push:
    branches: 
      - "preview"
  pull_request:
    types:
      - closed 
    branches: 
      - "preview"
      
jobs:
  security:
    runs-on: ubuntu-latest
    name: Scan securiry dependencies con SNYK
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    runs-on: ubuntu-latest
    name: Unit Test
    steps: 
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci --force
      - run: npm run test

  zap:
    runs-on: ubuntu-latest
    name: Scan with owasp zap
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci --force
      
      - name: Build Next.js app
        run: npm run build
      
      - name: Start Next.js app
        run: npm run start & npx wait-on http://localhost:3000
      
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: true
          fail_action: false
          issue_title: Security Tests
      
      - name: Stop Next.js app
        if: always()
        run: kill $(lsof -t -i:3000) || true

  deploy:
    runs-on: ubuntu-latest
    needs: ["security", "test", "zap"]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}